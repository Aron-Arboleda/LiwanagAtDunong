<Grid2 item xs={12}>
        <TextField
          label="Nickname *"
          variant="outlined"
          fullWidth
          {...register("nickName", {
            required: "Nickname is required",
            maxLength: {
              value: 50,
              message: "Nickname cannot exceed 50 characters.",
            },
          })}
          error={!!errors.nickName}
          helperText={errors.nickName ? errors.nickName.message : ""}
        />
        <span style={{ fontSize: "0.875rem", color: "#666" }}>
          Please enter your nickname
        </span>
      </Grid2>
      <Grid2 item xs={12}>
        <TextField
          label="Age *"
          variant="outlined"
          fullWidth
          type="number"
          {...register("age", {
            required: "Age is required",
            min: {
              value: 1,
              message: "Age must be at least 1.",
            },
            max: {
              value: 120,
              message: "Age must not exceed 120.",
            },
            validate: (value) =>
              Number.isInteger(Number(value)) || "Age must be a whole number.",
          })}
          error={!!errors.age}
          helperText={errors.age ? errors.age.message : ""}
        />
        <span style={{ fontSize: "0.875rem", color: "#666" }}>
          Please enter your age
        </span>
      </Grid2>

      <Grid2 item xs={12}>
        <TextField
          label="Birthday *"
          variant="outlined"
          fullWidth
          type="date"
          InputLabelProps={{
            shrink: true,
          }}
          {...register("birthday", {
            required: "Birthday is required",
            validate: (value) => {
              const today = new Date();
              const selectedDate = new Date(value);
              if (selectedDate > today) {
                return "Birthday cannot be in the future.";
              }
              return true;
            },
          })}
          error={!!errors.birthday}
          helperText={errors.birthday ? errors.birthday.message : ""}
        />
        <span style={{ fontSize: "0.875rem", color: "#666" }}>
          Please enter your date of birth
        </span>
      </Grid2>

      <Grid2 item xs={12}>
        <TextField
          label="Active Email Address *"
          variant="outlined"
          fullWidth
          type="email"
          {...register("email", {
            required: "Email is required",
            pattern: {
              value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/,
              message: "Invalid email address format.",
            },
          })}
          error={!!errors.email}
          helperText={errors.email ? errors.email.message : ""}
        />
        <span style={{ fontSize: "0.875rem", color: "#666" }}>
          Please enter your active email address
        </span>
      </Grid2>
      <Grid2 item xs={12}>
        <TextField
          label="Contact Number *"
          variant="outlined"
          fullWidth
          type="tel"
          placeholder="09XXXXXXXXX"
          {...register("contactNumber", {
            required: "Contact number is required",
            pattern: {
              value: /^09\d{9}$/,
              message: "Invalid contact number format. Use 09XXXXXXXXX.",
            },
          })}
          error={!!errors.contactNumber}
          helperText={errors.contactNumber ? errors.contactNumber.message : ""}
        />
        <span style={{ fontSize: "0.875rem", color: "#666" }}>
          Please enter your contact number in the format 09XXXXXXXXX
        </span>
      </Grid2>
      <Grid2 item xs={12}>
        <TextField
          label="Locality (City/Municipality) *"
          variant="outlined"
          fullWidth
          {...register("locality", {
            required: "Locality is required",
            maxLength: {
              value: 100,
              message: "Locality cannot exceed 100 characters.",
            },
          })}
          error={!!errors.locality}
          helperText={errors.locality ? errors.locality.message : ""}
        />
        <span style={{ fontSize: "0.875rem", color: "#666" }}>
          Please enter your city or municipality of residence
        </span>
      </Grid2>
      <Grid2 item xs={12}>
        <TextField
          label="Occupation *"
          variant="outlined"
          fullWidth
          {...register("occupation", {
            required: "Occupation is required",
            maxLength: {
              value: 200,
              message: "Occupation description cannot exceed 200 characters.",
            },
          })}
          error={!!errors.occupation}
          helperText={errors.occupation ? errors.occupation.message : ""}
        />
        <span style={{ fontSize: "0.875rem", color: "#666" }}>
          For Students: Write "Student" (Your course, year level, and your
          school). <br />
          For Professionals: Write your field of work, company, and position.
        </span>
      </Grid2>
      <Grid2 item xs={12}>
        <TextField
          label="Affiliation/Organization"
          variant="outlined"
          fullWidth
          {...register("affiliation", {
            maxLength: {
              value: 150,
              message:
                "Affiliation/Organization name cannot exceed 150 characters.",
            },
          })}
          error={!!errors.affiliation}
          helperText={errors.affiliation ? errors.affiliation.message : ""}
        />
        <span style={{ fontSize: "0.875rem", color: "#666" }}>
          Please enter your affiliation or organization name (optional)
        </span>
      </Grid2>

      <Grid2 item xs={12}>
        <TextField
          label="Facebook Account/Messenger Link *"
          variant="outlined"
          fullWidth
          {...register("facebookLink", {
            required: "Facebook Account/Messenger link is required",
            pattern: {
              value:
                /^(https?:\/\/)?(www\.)?(facebook|fb)\.com\/[A-Za-z0-9._%+-]+$/,
              message:
                "Invalid Facebook/Messenger link. Please provide a valid URL.",
            },
          })}
          error={!!errors.facebookLink}
          helperText={errors.facebookLink ? errors.facebookLink.message : ""}
        />
        <span style={{ fontSize: "0.875rem", color: "#666" }}>
          Please enter your Facebook or Messenger link
        </span>
      </Grid2>

      <Grid2 item xs={12}>
        <TextField
          label="Availability Date 1 (Sunday) *"
          variant="outlined"
          fullWidth
          type="date"
          InputLabelProps={{
            shrink: true,
          }}
          {...register("availabilityDate1", {
            required: "Availability Date 1 is required",
            validate: (value) => {
              const selectedDate = new Date(value);
              if (selectedDate.getDay() !== 0) {
                return "Date must be a Sunday.";
              }
              return true;
            },
          })}
          error={!!errors.availabilityDate1}
          helperText={
            errors.availabilityDate1 ? errors.availabilityDate1.message : ""
          }
        />
        <span style={{ fontSize: "0.875rem", color: "#666" }}>
          Please select an availability date (Sunday) for the first field
        </span>
      </Grid2>

      <Grid2 item xs={12}>
        <TextField
          label="Availability Date 2 (Sunday)"
          variant="outlined"
          fullWidth
          type="date"
          InputLabelProps={{
            shrink: true,
          }}
          {...register("availabilityDate2", {
            validate: (value) => {
              if (value) {
                const selectedDate = new Date(value);
                if (selectedDate.getDay() !== 0) {
                  return "Date must be a Sunday.";
                }
              }
              return true;
            },
          })}
          error={!!errors.availabilityDate2}
          helperText={
            errors.availabilityDate2 ? errors.availabilityDate2.message : ""
          }
        />
        <span style={{ fontSize: "0.875rem", color: "#666" }}>
          Please select an optional availability date (Sunday)
        </span>
      </Grid2>

      <Grid2 item xs={12}>
        <TextField
          label="Availability Date 3 (Sunday)"
          variant="outlined"
          fullWidth
          type="date"
          InputLabelProps={{
            shrink: true,
          }}
          {...register("availabilityDate3", {
            validate: (value) => {
              if (value) {
                const selectedDate = new Date(value);
                if (selectedDate.getDay() !== 0) {
                  return "Date must be a Sunday.";
                }
              }
              return true;
            },
          })}
          error={!!errors.availabilityDate3}
          helperText={
            errors.availabilityDate3 ? errors.availabilityDate3.message : ""
          }
        />
        <span style={{ fontSize: "0.875rem", color: "#666" }}>
          Please select an optional availability date (Sunday)
        </span>
      </Grid2>

      <Grid2 item xs={12}>
        <TextField
          label="Questions *"
          variant="outlined"
          fullWidth
          multiline
          rows={4}
          {...register("questions", {
            required: "Questions are required",
            maxLength: {
              value: 500,
              message: "Your question cannot exceed 500 characters.",
            },
          })}
          error={!!errors.questions}
          helperText={errors.questions ? errors.questions.message : ""}
        />
        <span style={{ fontSize: "0.875rem", color: "#666" }}>
          Feel free to reach out if you have any program-related questions;
          we're here to assist you! If you're interested in partnerships or
          collaborations, please get in touch with us via our Facebook page for
          the best response. 😊
        </span>
      </Grid2>